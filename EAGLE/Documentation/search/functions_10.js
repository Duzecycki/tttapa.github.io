var searchData=
[
  ['sampleoderesult',['sampleODEResult',['../d9/d67/ODEEval_8hpp.html#a871102f606e7ee0be64c1c1eb17dff13',1,'ODEEval.hpp']]],
  ['schur',['schur',['../d0/d83/LQR_8hpp.html#a5301a5b87f63568bb67f29c815685836',1,'LQR.hpp']]],
  ['select_5fana',['select_ana',['../d0/d83/LQR_8hpp.html#a11a73a0e9849f4e68c2f206e9e5b64dc',1,'LQR.hpp']]],
  ['select_5fdig',['select_dig',['../d0/d83/LQR_8hpp.html#ac6026939a215044aaea73915597098e1',1,'LQR.hpp']]],
  ['sign',['sign',['../d9/d52/HouseholderQR_8hpp.html#ae91f1ecebb987562f092671e0cb75c40',1,'HouseholderQR.hpp']]],
  ['simulate',['simulate',['../d6/d18/classModel.html#aabf69db1725e0a140f7316b2906647b2',1,'Model::simulate(InputFunction &amp;u, VecX_t x_start, const AdaptiveODEOptions &amp;opt)=0'],['../d6/d18/classModel.html#ab3d72ed69c20cca5c8460180219a93a9',1,'Model::simulate(typename std::back_insert_iterator&lt; std::vector&lt; double &gt;&gt; timeresult, typename std::back_insert_iterator&lt; std::vector&lt; VecX_t &gt;&gt; xresult, InputFunction &amp;u, VecX_t x_start, const AdaptiveODEOptions &amp;opt)=0'],['../d6/d18/classModel.html#ac924e098fe412d45d9944f5692dad645',1,'Model::simulate(VecU_t u, VecX_t x_start, const AdaptiveODEOptions &amp;opt)'],['../d6/d18/classModel.html#a9d0a8fdbb69687a2d735aa4c8969bc0d',1,'Model::simulate(typename std::back_insert_iterator&lt; std::vector&lt; double &gt;&gt; timeresult, typename std::back_insert_iterator&lt; std::vector&lt; VecX_t &gt;&gt; xresult, VecU_t u, VecX_t x_start, const AdaptiveODEOptions &amp;opt)'],['../d6/d18/classModel.html#abff0a28184c1d0ac750d8d352c573d60',1,'Model::simulate(ContinuousController&lt; Nx, Nu, Ny &gt; &amp;controller, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt)=0'],['../d6/d18/classModel.html#ab2ed958dbb412669b1a97ff3f2209f4a',1,'Model::simulate(DiscreteController&lt; Nx, Nu, Ny &gt; &amp;controller, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt)=0'],['../d6/d18/classModel.html#a1ecff053d6f9fd69cf7322c72c59abae',1,'Model::simulate(DiscreteController&lt; Nx, Nu, Ny &gt; &amp;controller, DiscreteObserver&lt; Nx, Nu, Ny &gt; &amp;observer, TimeFunctionT&lt; VecU_t &gt; &amp;randFnW, TimeFunctionT&lt; VecY_t &gt; &amp;randFnV, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt)=0'],['../d3/d6d/classContinuousModel.html#a638a85c7370214fe1dc68487a696b7c0',1,'ContinuousModel::simulate(InputFunction &amp;u, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a6c9a9704cbcca2c64dc2f7f53bd38ef7',1,'ContinuousModel::simulate(typename std::back_insert_iterator&lt; std::vector&lt; double &gt;&gt; timeresult, typename std::back_insert_iterator&lt; std::vector&lt; VecX_t &gt;&gt; xresult, InputFunction &amp;u, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a0172f3511dbe97da3a1f883556b65eda',1,'ContinuousModel::simulate(VecU_t u, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a2aa40bb5cc19fc9f86dd3fbc1e997d68',1,'ContinuousModel::simulate(typename std::back_insert_iterator&lt; std::vector&lt; double &gt;&gt; timeresult, typename std::back_insert_iterator&lt; std::vector&lt; VecX_t &gt;&gt; xresult, VecU_t u, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a754dfce0ebd31024e6ead90c78e125eb',1,'ContinuousModel::simulate(ContinuousController&lt; Nx, Nu, Ny &gt; &amp;controller, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a5ce5718bbce5fd8de18d1f276884e47a',1,'ContinuousModel::simulate(DiscreteController&lt; Nx, Nu, Ny &gt; &amp;controller, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override'],['../d3/d6d/classContinuousModel.html#a60bcfc13097ac226a5ff5cac733731fa',1,'ContinuousModel::simulate(DiscreteController&lt; Nx, Nu, Ny &gt; &amp;controller, DiscreteObserver&lt; Nx, Nu, Ny &gt; &amp;observer, TimeFunctionT&lt; VecU_t &gt; &amp;randFnW, TimeFunctionT&lt; VecY_t &gt; &amp;randFnV, ReferenceFunction &amp;r, VecX_t x_start, const AdaptiveODEOptions &amp;opt) override']]],
  ['solveleastsquares',['solveLeastSquares',['../d0/d7e/LeastSquares_8hpp.html#a3e86962f655361a684f770b14c9fe1e2',1,'LeastSquares.hpp']]],
  ['statestoeuler',['statesToEuler',['../d5/d71/classNonLinearFullDroneModel.html#a2d360eff209db07dfaf476f20ad2b08f',1,'NonLinearFullDroneModel']]],
  ['statetoeuler',['stateToEuler',['../d5/d71/classNonLinearFullDroneModel.html#a9b04170eb796e07fbd46763c54ac2754',1,'NonLinearFullDroneModel']]]
];
