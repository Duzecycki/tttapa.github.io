var annotated_dup =
[
    [ "Bankable", "namespaceBankable.html", "namespaceBankable" ],
    [ "MCU", "namespaceMCU.html", "namespaceMCU" ],
    [ "_Setbase", "struct__Setbase.html", "struct__Setbase" ],
    [ "_Setbytesep", "struct__Setbytesep.html", "struct__Setbytesep" ],
    [ "_Setprecision", "struct__Setprecision.html", "struct__Setprecision" ],
    [ "AnalogMultiplex", "classAnalogMultiplex.html", "classAnalogMultiplex" ],
    [ "Array", "structArray.html", "structArray" ],
    [ "AudioVU", "classAudioVU.html", "classAudioVU" ],
    [ "AudioVULEDs", "classAudioVULEDs.html", "classAudioVULEDs" ],
    [ "Bank", "classBank.html", "classBank" ],
    [ "BankableMIDIInputAddressable", "classBankableMIDIInputAddressable.html", "classBankableMIDIInputAddressable" ],
    [ "BankableMIDIOutput", "classBankableMIDIOutput.html", "classBankableMIDIOutput" ],
    [ "BankableMIDIOutputAddressable", "classBankableMIDIOutputAddressable.html", "classBankableMIDIOutputAddressable" ],
    [ "BankConfigAddressable", "classBankConfigAddressable.html", "classBankConfigAddressable" ],
    [ "BitArray", "classBitArray.html", "classBitArray" ],
    [ "BLEMIDI", "classBLEMIDI.html", "classBLEMIDI" ],
    [ "BluetoothMIDI_Interface", "classBluetoothMIDI__Interface.html", "classBluetoothMIDI__Interface" ],
    [ "Button", "classButton.html", "classButton" ],
    [ "ButtonMatrix", "classButtonMatrix.html", "classButtonMatrix" ],
    [ "CCButton", "classCCButton.html", "classCCButton" ],
    [ "CCButtonLatching", "classCCButtonLatching.html", "classCCButtonLatching" ],
    [ "CCButtonMatrix", "classCCButtonMatrix.html", "classCCButtonMatrix" ],
    [ "CCButtons", "classCCButtons.html", "classCCButtons" ],
    [ "CCIncrementDecrementButtons", "classCCIncrementDecrementButtons.html", "classCCIncrementDecrementButtons" ],
    [ "CCPotentiometer", "classCCPotentiometer.html", "classCCPotentiometer" ],
    [ "CCRotaryEncoder", "classCCRotaryEncoder.html", "classCCRotaryEncoder" ],
    [ "ContinuousCCSender", "classContinuousCCSender.html", "classContinuousCCSender" ],
    [ "Control_Surface_", "classControl__Surface__.html", "classControl__Surface__" ],
    [ "DigitalCCSender", "classDigitalCCSender.html", "classDigitalCCSender" ],
    [ "DigitalNoteSender", "classDigitalNoteSender.html", "classDigitalNoteSender" ],
    [ "Display", "structDisplay.html", null ],
    [ "DisplayElement", "classDisplayElement.html", "classDisplayElement" ],
    [ "DisplayInterface", "classDisplayInterface.html", "classDisplayInterface" ],
    [ "DotBarDisplayLEDs", "classDotBarDisplayLEDs.html", "classDotBarDisplayLEDs" ],
    [ "DoublyLinkable", "classDoublyLinkable.html", "classDoublyLinkable" ],
    [ "DoublyLinkedList", "classDoublyLinkedList.html", "classDoublyLinkedList" ],
    [ "EMA", "classEMA.html", "classEMA" ],
    [ "EMA_f", "classEMA__f.html", "classEMA__f" ],
    [ "EncoderSelector", "classEncoderSelector.html", "classEncoderSelector" ],
    [ "EncoderSelector_Base", "classEncoderSelector__Base.html", "classEncoderSelector__Base" ],
    [ "EncoderSelectorLEDs", "classEncoderSelectorLEDs.html", "classEncoderSelectorLEDs" ],
    [ "ExtendedIOElement", "classExtendedIOElement.html", "classExtendedIOElement" ],
    [ "FilteredAnalog", "classFilteredAnalog.html", "classFilteredAnalog" ],
    [ "HairlessMIDI_Interface", "classHairlessMIDI__Interface.html", "classHairlessMIDI__Interface" ],
    [ "HardwareSerialDebugMIDI_Interface", "classHardwareSerialDebugMIDI__Interface.html", "classHardwareSerialDebugMIDI__Interface" ],
    [ "HardwareSerialMIDI_Interface", "classHardwareSerialMIDI__Interface.html", "classHardwareSerialMIDI__Interface" ],
    [ "Hysteresis", "classHysteresis.html", "classHysteresis" ],
    [ "IncrementButton", "classIncrementButton.html", "classIncrementButton" ],
    [ "IncrementDecrementButtons", "classIncrementDecrementButtons.html", "classIncrementDecrementButtons" ],
    [ "IncrementDecrementSelector", "classIncrementDecrementSelector.html", "classIncrementDecrementSelector" ],
    [ "IncrementDecrementSelector_Base", "classIncrementDecrementSelector__Base.html", "classIncrementDecrementSelector__Base" ],
    [ "IncrementDecrementSelectorLEDs", "classIncrementDecrementSelectorLEDs.html", "classIncrementDecrementSelectorLEDs" ],
    [ "Incrementor", "classIncrementor.html", "classIncrementor" ],
    [ "IncrementSelector", "classIncrementSelector.html", "classIncrementSelector" ],
    [ "IncrementSelector_Base", "classIncrementSelector__Base.html", "classIncrementSelector__Base" ],
    [ "IncrementSelectorLEDs", "classIncrementSelectorLEDs.html", "classIncrementSelectorLEDs" ],
    [ "is_unsigned", "structis__unsigned.html", "structis__unsigned" ],
    [ "IVU", "classIVU.html", "classIVU" ],
    [ "LEDs", "classLEDs.html", "classLEDs" ],
    [ "Linkable", "classLinkable.html", "classLinkable" ],
    [ "Location", "structLocation.html", "structLocation" ],
    [ "ManyButtonsSelector", "classManyButtonsSelector.html", "classManyButtonsSelector" ],
    [ "ManyButtonsSelector_Base", "classManyButtonsSelector__Base.html", "classManyButtonsSelector__Base" ],
    [ "ManyButtonsSelectorLEDs", "classManyButtonsSelectorLEDs.html", "classManyButtonsSelectorLEDs" ],
    [ "MIDI_Callbacks", "classMIDI__Callbacks.html", "classMIDI__Callbacks" ],
    [ "MIDI_Interface", "classMIDI__Interface.html", "classMIDI__Interface" ],
    [ "MIDI_message", "structMIDI__message.html", "structMIDI__message" ],
    [ "MIDI_message_matcher", "structMIDI__message__matcher.html", "structMIDI__message__matcher" ],
    [ "MIDI_Parser", "classMIDI__Parser.html", "classMIDI__Parser" ],
    [ "MIDIButton", "classMIDIButton.html", "classMIDIButton" ],
    [ "MIDIButtonLatching", "classMIDIButtonLatching.html", "classMIDIButtonLatching" ],
    [ "MIDIButtonMatrix", "classMIDIButtonMatrix.html", "classMIDIButtonMatrix" ],
    [ "MIDIButtons", "classMIDIButtons.html", "classMIDIButtons" ],
    [ "MIDIFilteredAnalog", "classMIDIFilteredAnalog.html", "classMIDIFilteredAnalog" ],
    [ "MIDIFilteredAnalogAddressable", "classMIDIFilteredAnalogAddressable.html", "classMIDIFilteredAnalogAddressable" ],
    [ "MIDIIncrementDecrementButtons", "classMIDIIncrementDecrementButtons.html", "classMIDIIncrementDecrementButtons" ],
    [ "MIDIInputElement", "classMIDIInputElement.html", "classMIDIInputElement" ],
    [ "MIDIInputElementAddressable", "classMIDIInputElementAddressable.html", "classMIDIInputElementAddressable" ],
    [ "MIDIInputElementCC", "classMIDIInputElementCC.html", "classMIDIInputElementCC" ],
    [ "MIDIInputElementChannelPressure", "classMIDIInputElementChannelPressure.html", "classMIDIInputElementChannelPressure" ],
    [ "MIDIInputElementNote", "classMIDIInputElementNote.html", "classMIDIInputElementNote" ],
    [ "MIDINote", "classMIDINote.html", "classMIDINote" ],
    [ "MIDINote_Base", "classMIDINote__Base.html", "classMIDINote__Base" ],
    [ "MIDINoteLED", "classMIDINoteLED.html", "classMIDINoteLED" ],
    [ "MIDINoteLED_Base", "classMIDINoteLED__Base.html", "classMIDINoteLED__Base" ],
    [ "MIDIRotaryEncoder", "classMIDIRotaryEncoder.html", "classMIDIRotaryEncoder" ],
    [ "MotorFader", "structMotorFader.html", null ],
    [ "NormalUpdatable", "structNormalUpdatable.html", null ],
    [ "NoteBitmapDisplay", "classNoteBitmapDisplay.html", "classNoteBitmapDisplay" ],
    [ "NoteButton", "classNoteButton.html", "classNoteButton" ],
    [ "NoteButtonLatching", "classNoteButtonLatching.html", "classNoteButtonLatching" ],
    [ "NoteButtonMatrix", "classNoteButtonMatrix.html", "classNoteButtonMatrix" ],
    [ "NoteButtons", "classNoteButtons.html", "classNoteButtons" ],
    [ "OutputBank", "classOutputBank.html", "classOutputBank" ],
    [ "OutputBankConfigAddressable", "classOutputBankConfigAddressable.html", "classOutputBankConfigAddressable" ],
    [ "PBPotentiometer", "classPBPotentiometer.html", "classPBPotentiometer" ],
    [ "PitchBendSender", "classPitchBendSender.html", "classPitchBendSender" ],
    [ "Potentiometer", "structPotentiometer.html", null ],
    [ "ProgramChanger", "classProgramChanger.html", "classProgramChanger" ],
    [ "RelativeCCSender", "classRelativeCCSender.html", "classRelativeCCSender" ],
    [ "Selectable", "classSelectable.html", "classSelectable" ],
    [ "Selector", "classSelector.html", "classSelector" ],
    [ "SelectorDisplay", "classSelectorDisplay.html", "classSelectorDisplay" ],
    [ "SelectorLEDs", "classSelectorLEDs.html", "classSelectorLEDs" ],
    [ "SerialDebugMIDI_Interface", "classSerialDebugMIDI__Interface.html", "classSerialDebugMIDI__Interface" ],
    [ "SerialMIDI_Interface", "classSerialMIDI__Interface.html", "classSerialMIDI__Interface" ],
    [ "SerialMIDI_Parser", "classSerialMIDI__Parser.html", "classSerialMIDI__Parser" ],
    [ "ShiftRegisterOut", "classShiftRegisterOut.html", "classShiftRegisterOut" ],
    [ "SoftwareSerialDebugMIDI_Interface", "classSoftwareSerialDebugMIDI__Interface.html", "classSoftwareSerialDebugMIDI__Interface" ],
    [ "SoftwareSerialMIDI_Interface", "classSoftwareSerialMIDI__Interface.html", "classSoftwareSerialMIDI__Interface" ],
    [ "SSD1306_DisplayInterface", "classSSD1306__DisplayInterface.html", "classSSD1306__DisplayInterface" ],
    [ "StreamDebugMIDI_Interface", "classStreamDebugMIDI__Interface.html", "classStreamDebugMIDI__Interface" ],
    [ "StreamMIDI_Interface", "classStreamMIDI__Interface.html", "classStreamMIDI__Interface" ],
    [ "Timer", "classTimer.html", "classTimer" ],
    [ "Transposer", "classTransposer.html", "classTransposer" ],
    [ "Updatable", "classUpdatable.html", "classUpdatable" ],
    [ "USBDebugMIDI_Interface", "classUSBDebugMIDI__Interface.html", "classUSBDebugMIDI__Interface" ],
    [ "USBMIDI_Interface", "classUSBMIDI__Interface.html", "classUSBMIDI__Interface" ],
    [ "USBMIDI_Parser", "classUSBMIDI__Parser.html", "classUSBMIDI__Parser" ],
    [ "USBSerialMIDI_Interface", "classUSBSerialMIDI__Interface.html", "classUSBSerialMIDI__Interface" ],
    [ "VolumeControl", "classVolumeControl.html", "classVolumeControl" ],
    [ "XBitmap", "structXBitmap.html", "structXBitmap" ]
];